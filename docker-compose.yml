services:
  # PostgreSQL データベース
  db:
    image: postgres:15-alpine
    container_name: sns-db
    environment:
      POSTGRES_DB: snsplatform
      POSTGRES_USER: snsuser
      POSTGRES_PASSWORD: snspassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U snsuser -d snsplatform"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sns-network

  # バックエンドAPI
  backend:
    image: node:18-alpine
    container_name: sns-backend
    working_dir: /app
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://snsuser:snspassword@db:5432/snsplatform
      - JWT_SECRET=your-super-secret-jwt-key
      - PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npm install && npm run dev"
    networks:
      - sns-network

  # フロントエンド
  frontend:
    image: node:18-alpine
    container_name: sns-frontend
    working_dir: /app
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run dev"
    networks:
      - sns-network

volumes:
  postgres_data:

networks:
  sns-network:
    driver: bridge
